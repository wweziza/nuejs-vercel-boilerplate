var X=Object.create;var{getPrototypeOf:Y,defineProperty:M,getOwnPropertyNames:Z}=Object;var $=Object.prototype.hasOwnProperty;var N=(b,x,z)=>{z=b!=null?X(Y(b)):{};let B=x||!b||!b.__esModule?M(z,"default",{value:b,enumerable:!0}):z;for(let F of Z(b))if(!$.call(B,F))M(B,F,{get:()=>b[F],enumerable:!0});return B};var O=((b)=>typeof require!=="undefined"?require:typeof Proxy!=="undefined"?new Proxy(b,{get:(x,z)=>(typeof require!=="undefined"?require:x)[z]}):b)(function(b){if(typeof require!=="undefined")return require.apply(this,arguments);throw Error('Dynamic require of "'+b+'" is not supported')});import{loadChunks as R}from"./event-sourcing.js";import{fetchWithAuth as W,login as U}from"./auth.js";import{createUser as P}from"./users.js";var Q=sessionStorage.rust||location.search.includes("rust");if(Q)sessionStorage.rust=!0;async function _(){let b=await import("./wasm/engine.js"),x=b.default,{Engine:z}=b;return await x(),new z}async function w(){return Q?await _():await import("./engines/javascript.js")}var G=await w(),S=[],J={},D={on(b,x){S.push({event:b,fn:x})},search(b,x){let z=L(G.search(b,x));return z.items.forEach((B)=>A(b,B)),z},filter(b){let{type:x,query:z,filter:B}=b,F={ascending:!!b.asc||void 0,start:parseInt(b.start)||0,sort_by:b.sort,length:12};if(!x||x=="search"&&!z)return D.all(F);if(z)return D.search(z,F);let T=B?{[x]:B}:{type:x},V=G.filter(T,F);return L(V)},get(b){if(J[b])return J[b];let x=G.get(b);if(x)return J[b]=P(JSON.parse(x),D.total)},all(b){return L(G.all(b))},get authenticated(){return!!localStorage.sid},async login(b,x){let{sessionId:z,user:B}=await U(b,x);localStorage.sid=z,D.user=B,K("authenticated",B)},logout(){delete localStorage.sid,delete D.user,K("logout")},async load(){let b=G.get_total();if(b>0)return D.total=b;(await R()).forEach((z)=>G.add_events(z)),D.total=G.get_total()},async initialize(){if(D.authenticated){if(!D.user)D.user=await W("user.json");K("authenticated")}}};function K(b,x){S.forEach((z)=>{if(z.event===b)z.fn(x)})}function A(b,x){let z=new RegExp(`(${b})`,"gi");"name email message".split(" ").forEach((B)=>{x[B]=x[B].replace(z,"<mark>$1</mark>")})}function L(b){let x=JSON.parse(b);return x.items=x.items.map((z)=>P(z,D.total)),x}export{D as model};
